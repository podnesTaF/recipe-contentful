@model WebApplication1.Models.RecipeViewModel

@{
    ViewData["Title"] = "Create Recipe";
}

<h2>@ViewData["Title"]</h2>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

<form asp-action="CreateRecipe" asp-controller="Recipe" method="post"  enctype="multipart/form-data">
    <div class="form-group">
        <label asp-for="Title">Title</label>
        <input asp-for="Title" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="Description">Description</label>
        <textarea asp-for="Description" class="form-control"></textarea>
    </div>
    <div class="form-group">
        <label asp-for="PreparationTime">Preparation Time</label>
        <input asp-for="PreparationTime" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="Energy">Energy</label>
        <input asp-for="Energy" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="Image">Image</label>
        <input asp-for="Image" type="file" class="form-control" />
        <span asp-validation-for="Image" class="text-danger"></span>
    </div>
   <div class="my-4">
        <button type="submit" class="btn btn-primary">Create</button>
   </div>
</form>

<script>
    @if (ViewData["Response"] != null)
    {
        @:console.log(@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewData["Response"])));
    }
    else
    {
        @:console.log("No response data available.");
    }
</script>